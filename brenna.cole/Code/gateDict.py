import numpy as np

ccx0 = np.array([[1,0,0,0,0,0,0,0],
                [0,1,0,0,0,0,0,0],
                [0,0,1,0,0,0,0,0],
                [0,0,0,1,0,0,0,0],
                [0,0,0,0,1,0,0,0],
                [0,0,0,0,0,1,0,0],
                [0,0,0,0,0,0,0,1],
                [0,0,0,0,0,0,1,0]])

ccx1 = np.array([[1,0,0,0,0,0,0,0],
                [0,1,0,0,0,0,0,0],
                [0,0,1,0,0,0,0,0],
                [0,0,0,1,0,0,0,0],
                [0,0,0,0,1,0,0,0],
                [0,0,0,0,0,0,0,1],
                [0,0,0,0,0,0,1,0],
                [0,0,0,0,0,1,0,0]])


ccx2 = np.array([[1,0,0,0,0,0,0,0],
                [0,1,0,0,0,0,0,0],
                [0,0,1,0,0,0,0,0],
                [0,0,0,0,0,0,0,1],
                [0,0,0,0,1,0,0,0],
                [0,0,0,0,0,1,0,0],
                [0,0,0,0,0,0,1,0],
                [0,0,0,1,0,0,0,0]])


xc = np.array([[1,0,0,0],[0,0,0,1], [0,0,1,0],[0,1,0,0]])
cx = np.array([[1,0,0,0],[0,1,0,0], [0,0,0,1],[0,0,1,0]])

#np.eye(2, dtype=int)

cx01 = np.array([[1, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 1, 0, 0, 0, 0],
          [0, 0, 1, 0, 0, 0, 0, 0],
          [0, 1, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 1, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 1],
          [0, 0, 0, 0, 0, 0, 1, 0],
          [0, 0, 0, 0, 0, 1, 0, 0]])

cx02 = np.array([[1,0,0,0,0,0,0,0],
                [0,0,0,0,0,1,0,0],
                [0,0,1,0,0,0,0,0],
                [0,0,0,0,0,0,0,1],
                [0,0,0,0,1,0,0,0],
                [0,1,0,0,0,0,0,0],
                [0,0,0,0,0,0,1,0],
                [0,0,0,1,0,0,0,0]])


cx10 = np.array([[1, 0, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 1, 0, 0, 0, 0],
       [0, 0, 1, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 1, 0, 0, 0],
       [0, 0, 0, 0, 0, 1, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 0, 0, 1, 0]])

cx12 = np.array([[1, 0, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 1, 0],
       [0, 0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 1, 0, 0, 0],
       [0, 0, 0, 0, 0, 1, 0, 0],
       [0, 0, 1, 0, 0, 0, 0, 0],
       [0, 0, 0, 1, 0, 0, 0, 0]])

cx20 = np.array([[1,0,0,0,0,0,0,0],
                [0,1,0,0,0,0,0,0],
                [0,0,1,0,0,0,0,0],
                [0,0,0,1,0,0,0,0],
                [0,0,0,0,0,1,0,0],
                [0,0,0,0,1,0,0,0],
                [0,0,0,0,0,0,0,1],
                [0,0,0,0,0,0,1,0]])

cx21 = np.array([[1, 0, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0],
       [0, 0, 1, 0, 0, 0, 0, 0],
       [0, 0, 0, 1, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 1, 0],
       [0, 0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 1, 0, 0, 0],
       [0, 0, 0, 0, 0, 1, 0, 0]])

x0 = np.array([[0, 1, 0, 0, 0, 0, 0, 0],
       [1, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 1, 0, 0, 0, 0],
       [0, 0, 1, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 1, 0, 0],
       [0, 0, 0, 0, 1, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 0, 0, 1, 0]])

x1 = np.array([[0, 0, 1, 0, 0, 0, 0, 0],
       [0, 0, 0, 1, 0, 0, 0, 0],
       [1, 0, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 1, 0],
       [0, 0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 1, 0, 0, 0],
       [0, 0, 0, 0, 0, 1, 0, 0]])

x2 = np.array([[0, 0, 0, 0, 1, 0, 0, 0],
       [0, 0, 0, 0, 0, 1, 0, 0],
       [0, 0, 0, 0, 0, 0, 1, 0],
       [0, 0, 0, 0, 0, 0, 0, 1],
       [1, 0, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0],
       [0, 0, 1, 0, 0, 0, 0, 0],
       [0, 0, 0, 1, 0, 0, 0, 0]])

ccx0_ccx0 = np.matmul(ccx0,ccx0)
ccx0_ccx1 = np.matmul(ccx0,ccx1)
ccx0_ccx2 = np.matmul(ccx0,ccx2)

ccx1_ccx1 = np.matmul(ccx1,ccx1)
ccx1_ccx2 = np.matmul(ccx1,ccx2)
ccx1_ccx0 = np.matmul(ccx1,ccx0)

ccx2_ccx1 = np.matmul(ccx2,ccx1)
ccx2_ccx0 = np.matmul(ccx2,ccx0)
ccx2_ccx2 = np.matmul(ccx2,ccx2)


gate_dictionary_3 = {"ccx0":ccx0,
                   "ccx1":ccx1,
                   "ccx2":ccx2,
                   "ccx0_ccx0":ccx0_ccx0,
                   "ccx0_ccx1":ccx0_ccx1,
                   "ccx0_ccx2":ccx0_ccx2,
                   "ccx1_ccx0": ccx1_ccx0,
                   "ccx1_ccx1":ccx1_ccx1,
                   "ccx1_ccx2":ccx1_ccx2,
                   "ccx2_ccx0":ccx2_ccx0,
                   "ccx2_ccx1":ccx2_ccx1,
                   "ccx2_ccx2":ccx2_ccx2,
                   "cx01":cx01,
                   "cx02":cx02,
                   "cx10":cx10,
                   "cx12":cx12,
                   "cx20":cx20,
                   "cx21":cx21,
                   "x0":x0,
                   "x1":x1,
                   "x2":x2
                   }


def getDict():
    return gate_dictionary


def toffoliCommutingPairs():
    print("Tof gates with targets 0 and 1 commute: ")
    print(np.array_equal(ccx1_ccx0, ccx0_ccx1), end="\n\n")

    print("Tof gates with targets 0 and 2 commute: ")
    print(np.array_equal(ccx2_ccx0, ccx0_ccx2), end="\n\n")

    print("Tof gates with targets 1 and 2 commute: ")
    print(np.array_equal(ccx1_ccx2, ccx2_ccx1), end="\n\n")




